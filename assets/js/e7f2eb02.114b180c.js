"use strict";(self.webpackChunkhookah_docs=self.webpackChunkhookah_docs||[]).push([[4],{443:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/template-7aaf27223c6ccf4c3b1a68d4b1395d4c.png"},3747:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/config-c035feeb5578e2d47a280fac6a0020e8.png"},4247:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"getting-started/quick-introduction","title":"Quick Introduction","description":"Hookah is a lightweight, stateless, zero-dependency webhook router written in Go. It acts as a bridge between","source":"@site/docs/getting-started/quick-introduction.md","sourceDirName":"getting-started","slug":"/getting-started/quick-introduction","permalink":"/hookah-docs/docs/getting-started/quick-introduction","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Building Blocks","permalink":"/hookah-docs/docs/category/building-blocks"}}');var o=s(4848),i=s(8453);const r={sidebar_position:1},a="Quick Introduction",c={},l=[{value:"Core Features",id:"core-features",level:3},{value:"Setting Up a Discord Webhook",id:"setting-up-a-discord-webhook",level:2},{value:"Example Webhook Setup:",id:"example-webhook-setup",level:3},{value:"Creating Your Config with hookah-ui",id:"creating-your-config-with-hookah-ui",level:2},{value:"Steps",id:"steps",level:3},{value:"Hookah-UI Screenshots",id:"hookah-ui-screenshots",level:3},{value:"Sample Config (<code>config.json</code>)",id:"sample-config-configjson",level:2},{value:"Example Template (<code>templates/discord.tmpl</code>)",id:"example-template-templatesdiscordtmpl",level:2},{value:"Running Hookah with Docker Compose",id:"running-hookah-with-docker-compose",level:2},{value:"Test It with <code>curl</code>",id:"test-it-with-curl",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"quick-introduction",children:"Quick Introduction"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Hookah"})," is a lightweight, stateless, zero-dependency ",(0,o.jsx)(n.strong,{children:"webhook router"})," written in Go. It acts as a bridge between\nwebhook sources (like GitLab, GitHub, etc.) and destination targets (such as Discord), forwarding events ",(0,o.jsx)(n.strong,{children:"only when\nthey match defined rules"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"core-features",children:"Core Features"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Webhook Receiver"}),(0,o.jsx)(n.br,{}),"\n","Accepts incoming webhook requests from various services."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Rule Engine"}),(0,o.jsx)(n.br,{}),"\n","Filters incoming events based on headers, query params, or body fields."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Conditional Forwarding"}),(0,o.jsx)(n.br,{}),"\n","Forwards messages only when all conditions are met."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Reusable Templates"}),(0,o.jsx)(n.br,{}),"\n","Define templates once and reuse them across events."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Dynamic Payloads"}),(0,o.jsx)(n.br,{}),"\n","Compose outgoing requests using data from the incoming payload."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Visual UI Config"}),(0,o.jsx)(n.br,{}),"\n","Use ",(0,o.jsx)(n.a,{href:"https://hookah-ui.vercel.app",children:(0,o.jsx)(n.strong,{children:"hookah-ui"})})," to build your config visually and export ",(0,o.jsx)(n.code,{children:"config.json"}),",\n",(0,o.jsx)(n.code,{children:"templates"}),", and editable flows."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"setting-up-a-discord-webhook",children:"Setting Up a Discord Webhook"}),"\n",(0,o.jsx)(n.p,{children:"Before testing Hookah, you\u2019ll need a Discord webhook to forward events to."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Open your Discord server."}),"\n",(0,o.jsxs)(n.li,{children:["Navigate to ",(0,o.jsx)(n.strong,{children:"Server Settings \u2192 Integrations \u2192 Webhooks"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Click ",(0,o.jsx)(n.strong,{children:"New Webhook"}),", give it a name, select a channel, and click ",(0,o.jsx)(n.strong,{children:"Copy Webhook URL"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["You\u2019ll use this URL as the value for the ",(0,o.jsx)(n.code,{children:"discord-url"})," query parameter."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-webhook-setup",children:"Example Webhook Setup:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"discord-webhook-settings.png",src:s(8751).A+"",width:"798",height:"615"})}),"\n",(0,o.jsx)(n.h2,{id:"creating-your-config-with-hookah-ui",children:"Creating Your Config with hookah-ui"}),"\n",(0,o.jsxs)(n.p,{children:["Instead of writing JSON manually, you can use ",(0,o.jsx)(n.a,{href:"https://hookah-ui.vercel.app",children:(0,o.jsx)(n.strong,{children:"hookah-ui"})})," to visually build your\nconfiguration."]}),"\n",(0,o.jsx)(n.h3,{id:"steps",children:"Steps"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Visit ",(0,o.jsx)(n.a,{href:"https://hookah-ui.vercel.app",children:"hookah-ui"})]}),"\n",(0,o.jsx)(n.li,{children:"Add receivers, events, conditions, templates, and webhook targets."}),"\n",(0,o.jsxs)(n.li,{children:["Download the ZIP \u2014 it includes:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.code,{children:"config.json"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"templates/"})," folder"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"config.flow"})," (can be imported later for editing)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"hookah-ui-screenshots",children:"Hookah-UI Screenshots"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Flow Editor"}),"\n",(0,o.jsx)(n.img,{alt:"flow.png",src:s(7933).A+"",width:"2494",height:"1327"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Config Output"}),"\n",(0,o.jsx)(n.img,{alt:"config.png",src:s(3747).A+"",width:"2494",height:"1327"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Template Output"}),"\n",(0,o.jsx)(n.img,{alt:"template.png",src:s(443).A+"",width:"2494",height:"1327"})]}),"\n",(0,o.jsxs)(n.h2,{id:"sample-config-configjson",children:["Sample Config (",(0,o.jsx)(n.code,{children:"config.json"}),")"]}),"\n",(0,o.jsxs)(n.p,{children:["Below is a basic Hookah config that listens for GitLab ",(0,o.jsx)(n.code,{children:"merge_request"})," events and forwards them to a Discord webhook\n",(0,o.jsx)(n.strong,{children:"only"})," if the ",(0,o.jsx)(n.code,{children:"x-gitlab-label"})," matches a label on the MR."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "receiver": "gitlab",\n    "auth": {\n      "flow": "none"\n    },\n    "event_type_in": "body",\n    "event_type_key": "event_type",\n    "events": [\n      {\n        "event": "merge_request",\n        "conditions": [\n          "{Header.x-gitlab-label} {in} {Body.object_attributes.labels[].title}"\n        ],\n        "hooks": [\n          {\n            "name": "discord",\n            "endpoint_key": "discord-url",\n            "body": "discord.tmpl"\n          }\n        ]\n      }\n    ]\n  }\n]\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"example-template-templatesdiscordtmpl",children:["Example Template (",(0,o.jsx)(n.code,{children:"templates/discord.tmpl"}),")"]}),"\n",(0,o.jsx)(n.p,{children:"This template formats the GitLab merge request event into a rich embed for Discord."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "username": "{{title .user.username}}",\n  "avatar_url": "{{.user.avatar_url}}",\n  "content": "today is {{format now \\"2006-01-02\\"}}",\n  "embeds": [\n    {\n      "author": {\n        "name": "{{upper .user.username}}",\n        "icon_url": "{{.user.avatar_url}}"\n      },\n      "title": "{{.object_attributes.title}}",\n      "description": "{{.user.name}} {{pastTense .object_attributes.action}} a merge request in [{{.project.path_with_namespace}}]({{.project.web_url}})",\n      "color": 15258703,\n      "footer": {\n        "text": "{{format (parseTime .object_attributes.updated_at \\"2006-01-02T15:04:05Z07:00\\") \\"2006-01-02\\"}}"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"running-hookah-with-docker-compose",children:"Running Hookah with Docker Compose"}),"\n",(0,o.jsx)(n.p,{children:"Spin up Hookah quickly using Docker:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'version: "3.8"\nservices:\n  hookah:\n    image: adamiscool/hookah:v0.0.1\n    ports:\n      - "3000:3000"\n    environment:\n      PORT: 3000\n      CONFIG_PATH: /etc/hookah/config.json\n      TEMPLATES_PATH: /etc/hookah/templates\n    volumes:\n      - ./config.json:/etc/hookah/config.json:ro\n      - ./templates:/etc/hookah/templates:ro\n    restart: unless-stopped\n'})}),"\n",(0,o.jsx)(n.p,{children:"Start it with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose up -d\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"test-it-with-curl",children:["Test It with ",(0,o.jsx)(n.code,{children:"curl"})]}),"\n",(0,o.jsxs)(n.p,{children:["You can simulate a GitLab webhook using the following ",(0,o.jsx)(n.code,{children:"curl"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:3000/webhooks/gitlab?discord-url=YOUR_DISCORD_WEBHOOK_URL \\\n  -H "Content-Type: application/json" \\\n  -H "x-gitlab-label: API" \\\n  -d \'{\n    "object_kind": "merge_request",\n    "event_type": "merge_request",\n    "user": {\n      "name": "Administrator",\n      "username": "root",\n      "avatar_url": "http://www.gravatar.com/avatar/e64c7d89f26bd1972efa854d13d7dd61?s=40&d=identicon"\n    },\n    "project": {\n      "web_url": "http://example.com/gitlabhq/gitlab-test",\n      "path_with_namespace": "gitlabhq/gitlab-test"\n    },\n    "object_attributes": {\n      "title": "MS-Viewport",\n      "updated_at": "2013-12-03T17:23:34Z",\n      "labels": [\n        {\n          "title": "API",\n          "description": "API related issues"\n        }\n      ],\n      "action": "open"\n    }\n  }\'\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Replace ",(0,o.jsx)(n.code,{children:"YOUR_DISCORD_WEBHOOK_URL"})," with the actual URL you copied from Discord."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},7933:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/flow-fabcf9ed36f4de656ce9e0e633763669.png"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var t=s(6540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}},8751:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/discord-webhook-settings-eabc1d2033f4b0ed3b27e51361e362e5.png"}}]);