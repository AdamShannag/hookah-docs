"use strict";(self.webpackChunkhookah_docs=self.webpackChunkhookah_docs||[]).push([[992],{1743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"building-blocks/receivers","title":"Receivers","description":"A receiver is the primary entry point in Hookah. It represents a named webhook endpoint that external services like","source":"@site/docs/building-blocks/receivers.md","sourceDirName":"building-blocks","slug":"/building-blocks/receivers","permalink":"/docs/building-blocks/receivers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Building Blocks","permalink":"/docs/category/building-blocks"},"next":{"title":"Authentication (auth)","permalink":"/docs/building-blocks/auth"}}');var i=t(4848),s=t(8453);const o={sidebar_position:1},c="Receivers",l={},d=[{value:"Receiver Structure",id:"receiver-structure",level:2},{value:"Event Type Resolution",id:"event-type-resolution",level:3},{value:"Example",id:"example",level:3},{value:"Multiple Receivers",id:"multiple-receivers",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"receivers",children:"Receivers"})}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.strong,{children:"receiver"})," is the primary entry point in Hookah. It represents a named webhook endpoint that external services like\n",(0,i.jsx)(n.strong,{children:"GitLab"}),", ",(0,i.jsx)(n.strong,{children:"GitHub"}),", or any other webhook provider can send requests to."]}),"\n",(0,i.jsx)(n.p,{children:"Each receiver configuration tells Hookah how to authenticate incoming requests, where to extract the event type from,\nand how to handle matched events."}),"\n",(0,i.jsx)(n.h2,{id:"receiver-structure",children:"Receiver Structure"}),"\n",(0,i.jsx)(n.p,{children:"A receiver typically includes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"receiver"}),": A name for the receiver."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"auth"}),": authentication configuration."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"event_type_in"}),": Specifies where to extract the event type from \u2014 either ",(0,i.jsx)(n.code,{children:'"body"'})," or ",(0,i.jsx)(n.code,{children:'"header"'}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"event_type_key"}),": The key used to extract the event type."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"events"}),": An array of events and their corresponding hook configurations."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"event-type-resolution",children:"Event Type Resolution"}),"\n",(0,i.jsx)(n.p,{children:"Hookah determines the event type using the following keys:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'"event_type_in": "body",\n"event_type_key": "event_type"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"event_type_in"}),": Where to look \u2014 ",(0,i.jsx)(n.code,{children:'"body"'})," or ",(0,i.jsx)(n.code,{children:'"header"'}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"event_type_key"}),": The key used to extract the event name."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Hookah will then match this event name against entries in the ",(0,i.jsx)(n.code,{children:"events"})," array."]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "receiver": "gitlab",\n    "auth": {},\n    "event_type_in": "body",\n    "event_type_key": "event_type",\n    "events": []\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"multiple-receivers",children:"Multiple Receivers"}),"\n",(0,i.jsx)(n.p,{children:"Hookah supports multiple receivers, each with independent configuration, allowing you to route webhooks from different\nsources:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "receiver": "gitlab",\n    ...\n  },\n  {\n    "receiver": "github",\n    ...\n  }\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:"This makes Hookah flexible and scalable for handling diverse webhook sources with isolated rules and behaviors."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(6540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);