"use strict";(self.webpackChunkhookah_docs=self.webpackChunkhookah_docs||[]).push([[290],{956:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>a,frontMatter:()=>o,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"building-blocks/auth","title":"Authentication (auth)","description":"Each receiver in Hookah must define an auth block to control and validate incoming webhook requests. This block","source":"@site/docs/building-blocks/auth.md","sourceDirName":"building-blocks","slug":"/building-blocks/auth","permalink":"/docs/building-blocks/auth","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Receivers","permalink":"/docs/building-blocks/receivers"},"next":{"title":"Conditions","permalink":"/docs/building-blocks/conditions"}}');var s=n(4848),c=n(8453);const o={sidebar_position:2},r="Authentication (auth)",d={},h=[{value:"Supported Authentication Flows",id:"supported-authentication-flows",level:2},{value:"Fields in auth Block",id:"fields-in-auth-block",level:3},{value:"Example",id:"example",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"authentication-auth",children:["Authentication (",(0,s.jsx)(t.code,{children:"auth"}),")"]})}),"\n",(0,s.jsxs)(t.p,{children:["Each ",(0,s.jsx)(t.strong,{children:"receiver"})," in Hookah must define an ",(0,s.jsx)(t.code,{children:"auth"})," block to control and validate incoming webhook requests. This block\nspecifies how to authenticate requests based on the chosen flow."]}),"\n",(0,s.jsx)(t.h2,{id:"supported-authentication-flows",children:"Supported Authentication Flows"}),"\n",(0,s.jsx)(t.p,{children:"Hookah supports the following authentication methods:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Flow"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"none"})}),(0,s.jsx)(t.td,{children:"No authentication. Accepts all requests."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"plain secret"})}),(0,s.jsxs)(t.td,{children:["Matches the request header against the configured ",(0,s.jsx)(t.code,{children:"secret"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"basic auth"})}),(0,s.jsxs)(t.td,{children:["Verifies that the ",(0,s.jsx)(t.code,{children:"username:password"})," pair in the basic auth header matches the configured ",(0,s.jsx)(t.code,{children:"secret"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"gitlab"})}),(0,s.jsxs)(t.td,{children:["Compares the configured ",(0,s.jsx)(t.code,{children:"secret"})," with the GitLab token header using constant-time comparison (SHA-512)."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"github"})}),(0,s.jsxs)(t.td,{children:["Verifies the HMAC SHA-256 signature in the header (e.g., ",(0,s.jsx)(t.code,{children:"X-Hub-Signature-256"})," or custom header) using the configured ",(0,s.jsx)(t.code,{children:"secret"})," and the request body."]})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"fields-in-auth-block",children:"Fields in auth Block"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"flow"}),": The authentication method to use. One of ",(0,s.jsx)(t.code,{children:"gitlab"}),", ",(0,s.jsx)(t.code,{children:"github"}),", ",(0,s.jsx)(t.code,{children:"basic auth"}),", ",(0,s.jsx)(t.code,{children:"plain secret"}),", or ",(0,s.jsx)(t.code,{children:"none"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"header_secret_key"}),": The name of the header where the token is expected (e.g., ",(0,s.jsx)(t.code,{children:"X-Gitlab-Token"})," or ",(0,s.jsx)(t.code,{children:"X-Custom-Token"}),")."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"secret"}),": The expected secret value. For ",(0,s.jsx)(t.code,{children:"basic auth"}),", this should be the ",(0,s.jsx)(t.code,{children:"username:password"})," pair."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'[\n  {\n    "receiver": "gitlab",\n    "auth": {\n      "flow": "gitlab",\n      "header_secret_key": "X-Gitlab-Token",\n      "secret": "my-gitlab-webhook-secret-token"\n    },\n    "event_type_in": "body",\n    "event_type_key": "event_type",\n    "events": []\n  }\n]\n'})}),"\n",(0,s.jsxs)(t.p,{children:["In this example, the ",(0,s.jsx)(t.code,{children:"auth"})," block for the ",(0,s.jsx)(t.code,{children:"gitlab"})," receiver uses the ",(0,s.jsx)(t.code,{children:"gitlab"})," flow, extracting the GitLab token from the\n",(0,s.jsx)(t.code,{children:"X-Gitlab-Token"})," header and comparing it with the configured ",(0,s.jsx)(t.code,{children:"secret"}),"."]})]})}function a(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},c=i.createContext(s);function o(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);